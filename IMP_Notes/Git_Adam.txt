
git config --global user.name "mungaras783"
git config --global user.email "official email"
git config --global push.default "simple"
git clone <source-centralrepo> <dest-localrepo> (default location is current dir)
after couple of updates to current working directory run following command
git status
if we notice any untracked files, then run
untracking--->staging--->commit changes
git add . (taking all the files from current working directory)
git status
git commit -m "message", it's best practice to have a UserStory, Ticket# in commit message.
.git folder contains repo folder, snap shots. it's a hidden folder
git log (shows all commits from current working directory/repo)
git log -number ('1' represents latest commit)
git log --oneline (short desciption of commits)
git log --oneline -1
git show <commit-Id> (what differ between previous and current versions)
git never consider empty folders.
git push (pushing the changes from local to central repo)
git clone <source-repo> destination-folder----> this will create another workspace and then we can edit the date. push them to central repo.
git pull (Pulling the changes which were done by team mates/ sync or update repo)
  
git remote add testing-repo https://github.com/NAPPID/Terraform-aws.git
git push testing-repo

git tag -a "v1.5.0-beta" -m "version v1.5.0-beta"  ----> Annotated tags (Tagging the version locally).

git push origin v1.4 ----> Git will push the tags only if we specify the tag. 

git tag  ---------> List the tags.

git tag -l -n   

git tag -l *-rc* -----> List the all the tags which are have context of "rc". 

git log --pretty=oneline ----> List all the commits
 
git tag -a v1.2 15027957951b64cf874c3557a0f3547bd83b3ff6 -----> Tag old commits (git tag -a v1.0.2 <commit id>).

git tag -a -f v1.4 15027957951b64cf874c3557a0f3547bd83b3ff6  ----> Changing the tags for existed tag. 

$ git tag  ---> List all available tags such as v1,v2 and v3.
    v1
    v2
    v3
    
$ git tag -d v1 --->  Deleting the tag. 
$ git tag
    v2
    v3
